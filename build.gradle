plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ssginc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //************************************************************************
    //  template engine-thymeleaf
    //************************************************************************
    // thymeleaf - http body에 결과를 넣어주기 위한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'


    //************************************************************************
    //  spring boot core
    //************************************************************************
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    // 개발시에만 내장된 tomcat을 사용하고
    // 배포시에는 외부 tomcat이 있어 배포파일은 war파일에는 포함시키지 않겠다는 의미
    // 배포파일 war파일에 포함하고자 하는 경우 implementation으로 변경

    // spring-boot-starter는
    // implementation 'org.springframework.boot:spring-boot-starter-logging'를 포함함.
    // slf4j의 구현체인 log-back을 사용함.
    implementation 'org.springframework.boot:spring-boot-starter'

    //************************************************************************
    //  lombok-vo-log
    //************************************************************************
    // Lombok
    // vo(dto) 자동 생성 기능 + log를 위한 Log4J, Slf4j를 사용할 수 있게 함.
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    //************************************************************************
    //  spring security
    //************************************************************************
    // password암호화
    // Spring Security의 Crypto 모듈
    implementation 'org.springframework.security:spring-security-crypto:6.0.0'


    //************************************************************************
    //  db-mybatis-mysql-hikari
    //************************************************************************
    // db연결
    implementation 'mysql:mysql-connector-java:8.0.33' // 최신 버전 사용
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
    // vo <--> json
    //implementation 'org.modelmapper:modelmapper:3.1.0'
    // validation
    //implementation 'org.springframework.boot:spring-boot-starter-validation'


    //************************************************************************
    //  actuator
    //************************************************************************
    //implementation 'org.springframework.boot:spring-boot-starter-actuator'

    ////////////////////////////////////////////////////////////////////////////
    //************************************************************************
    // Spring Boot Test
    //************************************************************************
    ////////////////////////////////////////////////////////////////////////////

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // JUnit, Mockito, AssertJ 등 기본적인 테스트 라이브러리를 포함됨.
    // 생략 가능
    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // lombok을 이용해 Junit 테스트를 진행하는 경우 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
